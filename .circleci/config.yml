version: 2

jobs:
  build:

    docker:
      - image: getterminus/terminus-ui-circleci:11.11-20190830194903

    working_directory: ~/ci-build

    environment:
      TEST_REPORTS: /coverage

    steps:
      - add_ssh_keys

      - checkout

      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          name: Save Yarn Cache
          key: yarn
          paths:
            - ./node_modules

      - run:
          name: Lint
          command: yarn run lint:ci




      - run:
          name: TEST @terminus/ngx-tools/browser
          command: yarn run test:browser:ci && npx codecov -f coverage/browser/*.json -F browser

      - run:
          name: TEST @terminus/ngx-tools/coercion
          command: yarn run test:coercion:ci && npx codecov -f coverage/coercion/*.json -F coercion

      - run:
          name: TEST @terminus/ngx-tools/jwt
          command: yarn run test:jwt:ci && npx codecov -f coverage/jwt/*.json -F jwt

      - run:
          name: TEST @terminus/ngx-tools/keycodes
          command: yarn run test:keycodes:ci && npx codecov -f coverage/keycodes/*.json -F keycodes

      - run:
          name: TEST @terminus/ngx-tools/regex
          command: yarn run test:regex:ci && npx codecov -f coverage/regex/*.json -F regex

      - run:
          name: TEST @terminus/ngx-tools/testing
          command: yarn run test:testing:ci && npx codecov -f coverage/testing/*.json -F testing

      - run:
          name: TEST @terminus/ngx-tools/type-guards
          command: yarn run test:type-guards:ci && npx codecov -f coverage/type-guards/*.json -F type-guards

      - run:
          name: TEST @terminus/ngx-tools/utilities
          command: yarn run test:utilities:ci && npx codecov -f coverage/utilities/*.json -F utilities




      - run:
          name: Build Project
          command: yarn run build

      - run:
          name: Release
          command: npx semantic-release

      - store_artifacts:
          path: coverage/
          destination: ~/coverage/

      - store_artifacts:
          path: dist/
          destination: ~/dist/

      - store_artifacts:
          path: /home/circleci/.npm/_logs/
          destination: ~/npm_logs/




# HACK: This will allow tags to kick off the deploy process. Correct syntax support is coming soon:
# https://discuss.circleci.com/t/git-tag-deploys-in-2-0/9493/8
deployment:
  fake_deploy_for_cci2:
    tag: /.*/
    commands:
      - echo "make tags run in 2.0"
