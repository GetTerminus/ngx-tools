var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["angular","angular/ngrx","applic","benjamin","charity&#x1f4bb","collect","content","contribut","contributor","emoji","follow","get","goe","index","key","kind","librari","match","peopl","project","resourc","result","specif","start","starter","tabl","terminu","terminus/ngx","thank","tool","util","welcom","wonder","x1f4d6","x1f527","x1f914"],"overview.html":["1","class","inject","match","overview","result"],"license.html":["2015","2017","abov","action","and/or","angularclass","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","impli","includ","kind","liabil","liabl","licens","limit","llc","match","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["match","modul","result"],"injectables/ChangeDetectorRefMock.html":["angular","angular/cor","changedetectorrefmock","checknochang","class","default","defin","descript","detach","detectchang","detector","export","file","import","index","info","inject","markforcheck","match","mock","properti","reattach","ref.mock.t","ref.mock.ts:10","ref.mock.ts:11","ref.mock.ts:12","ref.mock.ts:13","ref.mock.ts:9","result","sourc","src/@terminus/ngx","tools/testing/src/mocks/chang","valu"],"classes/ElementRefMock.html":["angular","angular/cor","class","default","defin","descript","elementref","elementrefmock","export","file","foo","implement","import","index","info","innertext","match","mock","nativeel","properti","result","sourc","src/@terminus/ngx","style","tools/testing/src/mocks/elementref.mock.t","tools/testing/src/mocks/elementref.mock.ts:8","valu"],"miscellaneous/functions.html":["1","1st","39;a&#39","39;bar&#39","39;foo&#39","6","access","arr","array","axi","b","bar","be","between","boolean","browser","bubbl","by.t","by/group","call","canbubbl","cancel","check","child","code","compon","const","contain","continu","coordin","creat","createfakeev","createfakeevent(typ","createkeyboardev","createkeyboardevent(typ","createmouseev","createmouseevent(typ","createtouchev","createtouchevent(typ","debounc","debounce(func","deep","defin","descript","desir","differ","dispatch","dispatchev","dispatchevent(nod","dispatchfakeev","dispatchfakeevent(nod","dispatchkeyboardev","dispatchkeyboardevent(nod","dispatchmouseev","dispatchmouseevent(nod","dispatchtouchev","dispatchtouchevent(nod","dom","e","el.t","element","element.t","error","event","events.t","exampl","expect","expectnativeel","expectnativeel(fixtur","fake","fixtur","focus","foo","for.t","func","function","groupbi","groupby(arr","groupby(array","helper","index","input","invok","key","keyboard","keycod","keydown","length","level","locat","long","match","message.t","method","millisecond","miscellan","mous","ms","n","name","nativ","nativeel","need","node","noop","note","number","object","objects.t","onto","option","pagex","pagey","paramet","period","pointer","properti","queri","queryfor","queryfor(fixtur","result","return","reusabl","selector","set","shorthand","simul","specifi","split","src/@terminus/ngx","stop","string","target","test","time","tools/src/debounce/debounce.t","tools/src/group","tools/src/noop/noop.t","tools/testing/src/utilities/dispatch","tools/testing/src/utilities/ev","tools/testing/src/utilities/expect","tools/testing/src/utilities/queri","tools/testing/src/utilities/typ","tools/testing/src/utilities/wrap","touch","touchev","trigger","true","type","typeinel","typeinelement(valu","typerefer","undefin","up","user","valu","wait","within","wrappederrormessag","wrappederrormessage(","x","y"],"miscellaneous/variables.html":["0","100","13","188","27","32","33","34","35","36","37","38","39","40","46","48","4[0","57","5][0","5]|[68][0","6","6,100","65","8","9","9!@#$%^&*]{6,100","90","9])[0","9])[a","9]+\\.)+[a","9][0","9]{1,3}\\.[0","9]{1,3}])|(([a","9]{11}|(?:2131|1800|35\\d{3})\\d{11","9]{12}(?:[0","9]{12}|3[47][0","9]{13}|3(?:0[0","9]{14}|6(?:011|5[0","9]{3})?|5[1","address","american","angular","anim","assert","attachviewaft","backspac","between","card","card.regex.t","card/credit","charact","club","comma","createel","createtemplateanchor","createtext","createviewroot","credit","creditcardregex","default","defin","delet","destroyview","detachview","diner","discov","down_arrow","email","emailregex","end","enter","escap","express","home","index","invokeelementmethod","jcb","left_arrow","listen","listenglob","mastercard","match","miscellan","mock","nine","number","object","on","page_down","page_up","password","passwordregex","projectnod","regex","render","renderermock","result","right_arrow","s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0","selectrootel","setbindingdebuginfo","setelementattribut","setelementclass","setelementproperti","setelementstyl","settext","space","src/@terminus/ngx","string","tab","tools/keycodes/src/keycodes.const.t","tools/regex/src/credit","tools/regex/src/email/email.regex.t","tools/regex/src/password/password.regex.t","tools/testing/src/mocks/renderer.mock.t","type","up_arrow","valid","valu","variabl","visa","z","z0","z]{2","za","zero"]},"length":8},"tokenStore":{"root":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}},"1":{"0":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"3":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"8":{"8":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.2222222222222222},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"2":{"0":{"1":{"5":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"7":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"docs":{}},"docs":{}},"7":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"3":{"2":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"3":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"4":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"5":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"6":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"7":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"8":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"9":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},";":{"docs":{},"a":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}},"docs":{}},"docs":{}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}},"docs":{}},"docs":{}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"4":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"6":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"8":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}},"5":{"7":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{},"]":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"|":{"docs":{},"[":{"6":{"8":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}}},"docs":{}},"docs":{}}}}},"6":{"5":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},",":{"1":{"0":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"docs":{}},"docs":{}}},"8":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"9":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}},"!":{"docs":{},"@":{"docs":{},"#":{"docs":{},"$":{"docs":{},"%":{"docs":{},"^":{"docs":{},"&":{"docs":{},"*":{"docs":{},"]":{"docs":{},"{":{"6":{"docs":{},",":{"1":{"0":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}},"]":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}}},"docs":{},"a":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}},"+":{"docs":{},"\\":{"docs":{},".":{"docs":{},")":{"docs":{},"+":{"docs":{},"[":{"docs":{},"a":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"{":{"1":{"1":{"docs":{},"}":{"docs":{},"|":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"2":{"1":{"3":{"1":{"docs":{},"|":{"1":{"8":{"0":{"0":{"docs":{},"|":{"3":{"5":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"{":{"3":{"docs":{},"}":{"docs":{},")":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"{":{"1":{"1":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"2":{"docs":{},"}":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}}}},"|":{"3":{"docs":{},"[":{"4":{"7":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}}}},"3":{"docs":{},"}":{"docs":{},"|":{"3":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"0":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}},"docs":{}}}}},"docs":{}}}},"4":{"docs":{},"}":{"docs":{},"|":{"6":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"0":{"1":{"1":{"docs":{},"|":{"5":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}}},"docs":{},",":{"3":{"docs":{},"}":{"docs":{},"\\":{"docs":{},".":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}},"docs":{}}}},"]":{"docs":{},")":{"docs":{},"|":{"docs":{},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"a":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}},"docs":{}}},"3":{"docs":{},"}":{"docs":{},")":{"docs":{},"?":{"docs":{},"|":{"5":{"docs":{},"[":{"1":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}},"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564},"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.022988505747126436},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"i":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"a":{"docs":{},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"x":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011881188118811881}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}},"b":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011881188118811881}},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"n":{"docs":{},"j":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}},"u":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"&":{"docs":{},"#":{"docs":{},"x":{"1":{"docs":{},"f":{"4":{"docs":{},"b":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}},"docs":{}}},"docs":{}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":5.045977011494253}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"n":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.04597701149425287}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.07692307692307693}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.04040404040404041}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304}}}}}}}}},"d":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"m":{"docs":{},"a":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.034482758620689655},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":5.083333333333333}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"u":{"docs":{},"b":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921}}}},"n":{"docs":{},"b":{"docs":{},"u":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}}},"r":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}},"e":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}}}}}}}}},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"m":{"docs":{},"o":{"docs":{},"j":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.05742574257425743}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011881188118811881}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.10416666666666667}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":5.041666666666667}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"n":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564},"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"o":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"n":{"docs":{},"c":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.676567656765676}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}}}},"o":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"b":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"a":{"docs":{},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":5.0344827586206895}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304}}}}}},"f":{"docs":{},"o":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015841584158415842}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564},"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":3.343434343434343}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}},"l":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011881188118811881}}}}},"n":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.05128205128205128},"overview.html":{"ref":"overview.html","tf":0.2222222222222222},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.022988505747126436},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}}}}},"r":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.04597701149425287}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.335313531353135},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.3375}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}}}}},"c":{"docs":{},"k":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.022988505747126436},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}},"u":{"docs":{},"s":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}},"s":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.022988505747126436},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0297029702970297}}}}}}},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}},"u":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.05128205128205128}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.05128205128205128},"overview.html":{"ref":"overview.html","tf":0.2222222222222222},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.022988505747126436},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.04597701149425287}}}}}}}},"f":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218}}},"1":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218}}},"2":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218}}},"3":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218}}},"docs":{}},"9":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218}}},"docs":{}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}}}},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009900990099009901}}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664}}}}},"o":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04356435643564356},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09090909090909091}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}}}}}},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"@":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.06896551724137931},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.041666666666666664},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.01782178217821782},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"@":{"docs":{},"\"":{"docs":{},"]":{"docs":{},"+":{"docs":{},"(":{"docs":{},"\\":{"docs":{},".":{"docs":{},"[":{"docs":{},"^":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},"\\":{"docs":{},"[":{"docs":{},"\\":{"docs":{},"]":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},".":{"docs":{},",":{"docs":{},";":{"docs":{},":":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"@":{"docs":{},"\"":{"docs":{},"]":{"docs":{},"+":{"docs":{},")":{"docs":{},"*":{"docs":{},")":{"docs":{},"|":{"docs":{},"(":{"docs":{},"\"":{"docs":{},".":{"docs":{},"+":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},"@":{"docs":{},"(":{"docs":{},"(":{"docs":{},"\\":{"docs":{},"[":{"docs":{},"[":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011881188118811881}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.05128205128205128}},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.06896551724137931}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}},"s":{"docs":{},":":{"8":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332}}},"docs":{}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}},"n":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}},"u":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.07128712871287128},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.047524752475247525}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}}}}},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}}}}},"i":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304}}}}},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"(":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}}}}}}},"x":{"1":{"docs":{},"f":{"4":{"docs":{},"d":{"6":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}},"docs":{}}},"5":{"2":{"7":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}},"docs":{}},"docs":{}},"9":{"1":{"4":{"docs":{"index.html":{"ref":"index.html","tf":0.02564102564102564}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.01782178217821782}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.11111111111111}}}}}}}}},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}},"t":{"docs":{},"o":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0297029702970297}}}}}}}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.05747126436781609},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09583333333333334}}}}}},"i":{"docs":{},"n":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.05747126436781609},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.011494252873563218},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0297029702970297}}}}}}},"i":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.04597701149425287}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.04597701149425287}}}}}}},"o":{"docs":{},"r":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.06896551724137931}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.019801980198019802}},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}},"w":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"m":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}},"d":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.02178217821782178}}}},"o":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.005940594059405941}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.08333333333333333},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}},"m":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0297029702970297}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011881188118811881},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.008333333333333333}}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ChangeDetectorRefMock.html":{"ref":"injectables/ChangeDetectorRefMock.html","tf":0.05747126436781609},"classes/ElementRefMock.html":{"ref":"classes/ElementRefMock.html","tf":0.020833333333333332},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007920792079207921},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09583333333333334}}},"i":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.6708333333333325}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}},"y":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0039603960396039604}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0019801980198019802}}}}}}}}}}}}}}}}},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.01782178217821782}}},"j":{"docs":{},"c":{"docs":{},"b":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}}}},"z":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.016666666666666666}},"]":{"docs":{},"{":{"2":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004166666666666667}}},"docs":{}}},"a":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0125}}}}}}},"length":466},"corpusTokens":["0","1","100","13","188","1st","2015","2017","27","32","33","34","35","36","37","38","39","39;a&#39","39;bar&#39","39;foo&#39","40","46","48","4[0","57","5][0","5]|[68][0","6","6,100","65","8","9","9!@#$%^&*]{6,100","90","9])[0","9])[a","9]+\\.)+[a","9][0","9]{1,3}\\.[0","9]{1,3}])|(([a","9]{11}|(?:2131|1800|35\\d{3})\\d{11","9]{12}(?:[0","9]{12}|3[47][0","9]{13}|3(?:0[0","9]{14}|6(?:011|5[0","9]{3})?|5[1","abov","access","action","address","american","and/or","angular","angular/cor","angular/ngrx","angularclass","anim","applic","aris","arr","array","assert","associ","attachviewaft","author","axi","b","backspac","bar","be","benjamin","between","boolean","browser","bubbl","by.t","by/group","c","call","canbubbl","cancel","card","card.regex.t","card/credit","changedetectorrefmock","charact","charg","charity&#x1f4bb","check","checknochang","child","claim","class","club","code","collect","comma","compon","condit","connect","const","contain","content","continu","contract","contribut","contributor","coordin","copi","copyright","creat","createel","createfakeev","createfakeevent(typ","createkeyboardev","createkeyboardevent(typ","createmouseev","createmouseevent(typ","createtemplateanchor","createtext","createtouchev","createtouchevent(typ","createviewroot","credit","creditcardregex","damag","deal","debounc","debounce(func","deep","default","defin","delet","descript","desir","destroyview","detach","detachview","detectchang","detector","differ","diner","discov","dispatch","dispatchev","dispatchevent(nod","dispatchfakeev","dispatchfakeevent(nod","dispatchkeyboardev","dispatchkeyboardevent(nod","dispatchmouseev","dispatchmouseevent(nod","dispatchtouchev","dispatchtouchevent(nod","distribut","document","dom","down_arrow","e","el.t","element","element.t","elementref","elementrefmock","email","emailregex","emoji","end","enter","error","escap","event","events.t","exampl","expect","expectnativeel","expectnativeel(fixtur","export","express","fake","file","fit","fixtur","focus","follow","foo","for.t","free","func","function","furnish","get","goe","grant","groupbi","groupby(arr","groupby(array","helper","herebi","holder","home","implement","impli","import","includ","index","info","inject","innertext","input","invok","invokeelementmethod","jcb","key","keyboard","keycod","keydown","kind","left_arrow","length","level","liabil","liabl","librari","licens","limit","listen","listenglob","llc","locat","long","markforcheck","mastercard","match","merchant","merg","message.t","method","millisecond","miscellan","mit","mock","modifi","modul","mous","ms","n","name","nativ","nativeel","need","nine","node","noninfring","noop","note","notic","number","object","objects.t","obtain","on","onto","option","otherwis","out","overview","page_down","page_up","pagex","pagey","paramet","particular","password","passwordregex","peopl","period","permiss","permit","person","pointer","portion","project","projectnod","properti","provid","publish","purpos","queri","queryfor","queryfor(fixtur","reattach","ref.mock.t","ref.mock.ts:10","ref.mock.ts:11","ref.mock.ts:12","ref.mock.ts:13","ref.mock.ts:9","regex","render","renderermock","resourc","restrict","result","return","reusabl","right","right_arrow","s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0","selector","selectrootel","sell","set","setbindingdebuginfo","setelementattribut","setelementclass","setelementproperti","setelementstyl","settext","shall","shorthand","simul","softwar","sourc","space","specif","specifi","split","src/@terminus/ngx","start","starter","stop","string","style","subject","sublicens","substanti","tab","tabl","target","terminu","terminus/ngx","test","thank","time","tool","tools/keycodes/src/keycodes.const.t","tools/regex/src/credit","tools/regex/src/email/email.regex.t","tools/regex/src/password/password.regex.t","tools/src/debounce/debounce.t","tools/src/group","tools/src/noop/noop.t","tools/testing/src/mocks/chang","tools/testing/src/mocks/elementref.mock.t","tools/testing/src/mocks/elementref.mock.ts:8","tools/testing/src/mocks/renderer.mock.t","tools/testing/src/utilities/dispatch","tools/testing/src/utilities/ev","tools/testing/src/utilities/expect","tools/testing/src/utilities/queri","tools/testing/src/utilities/typ","tools/testing/src/utilities/wrap","tort","touch","touchev","trigger","true","type","typeinel","typeinelement(valu","typerefer","undefin","up","up_arrow","us","user","util","valid","valu","variabl","visa","wait","warranti","welcom","whether","within","without","wonder","wrappederrormessag","wrappederrormessage(","x","x1f4d6","x1f527","x1f914","y","z","z0","z]{2","za","zero"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@terminus/ngx-tools\n\n\n\n\n\n\nA collection of tools and utilities for Terminus (Angular/NGRX) applications.\n\n\nTable of Contents\n\nContributors\nResources\n\n\nContributors\nThanks goes to these wonderful people (emoji key):\n\n\n\n\n\nBenjamin Charity&#x1F4BB; &#x1F527; &#x1F914; &#x1F4D6;\n\n\n\n\n\n\n\n\n\nThis project follows the all-contributors specification. Contributions of any kind welcome!\nResources\n\nAngular Library Starter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n\n    \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2015-2017 AngularClass LLC\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChangeDetectorRefMock.html":{"url":"injectables/ChangeDetectorRefMock.html","title":"injectable - ChangeDetectorRefMock","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ChangeDetectorRefMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/@terminus/ngx-tools/testing/src/mocks/change-detector-ref.mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock of the Angular ChangeDetectorRefMock class\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        checkNoChanges\n                                    \n                                    \n                                        detach\n                                    \n                                    \n                                        detectChanges\n                                    \n                                    \n                                        markForCheck\n                                    \n                                    \n                                        reattach\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        checkNoChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    checkNoChanges:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : () => {}\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/@terminus/ngx-tools/testing/src/mocks/change-detector-ref.mock.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        detach\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    detach:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : () => {}\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/@terminus/ngx-tools/testing/src/mocks/change-detector-ref.mock.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        detectChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    detectChanges:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : () => {}\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/@terminus/ngx-tools/testing/src/mocks/change-detector-ref.mock.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        markForCheck\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    markForCheck:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : () => {}\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/@terminus/ngx-tools/testing/src/mocks/change-detector-ref.mock.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        reattach\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    reattach:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : () => {}\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/@terminus/ngx-tools/testing/src/mocks/change-detector-ref.mock.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/**\n * A mock of the Angular ChangeDetectorRefMock class\n */\n@Injectable()\nexport class ChangeDetectorRefMock {\n  markForCheck = () => {};\n  detach = () => {};\n  detectChanges = () => {};\n  checkNoChanges = () => {};\n  reattach = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElementRefMock.html":{"url":"classes/ElementRefMock.html","title":"class - ElementRefMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ElementRefMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/@terminus/ngx-tools/testing/src/mocks/elementRef.mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock of the Angular ElementRef class\n\n            \n\n\n            \n                Implements\n            \n            \n                        ElementRef\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        nativeElement\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        nativeElement\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    nativeElement:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : {\n                innerText: 'foo',\n                style: {},\n              }\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/@terminus/ngx-tools/testing/src/mocks/elementRef.mock.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { ElementRef } from '@angular/core';\n\n\n/**\n * A mock of the Angular ElementRef class\n */\nexport class ElementRefMock implements ElementRef {\n  nativeElement = {\n    innerText: 'foo',\n    style: {},\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createFakeEvent\n                        \n                        \n                            createKeyboardEvent\n                        \n                        \n                            createMouseEvent\n                        \n                        \n                            createTouchEvent\n                        \n                        \n                            debounce\n                        \n                        \n                            dispatchEvent\n                        \n                        \n                            dispatchFakeEvent\n                        \n                        \n                            dispatchKeyboardEvent\n                        \n                        \n                            dispatchMouseEvent\n                        \n                        \n                            dispatchTouchEvent\n                        \n                        \n                            expectNativeEl\n                        \n                        \n                            groupBy\n                        \n                        \n                            noop\n                        \n                        \n                            queryFor\n                        \n                        \n                            typeInElement\n                        \n                        \n                            wrappedErrorMessage\n                        \n                    \n                \n            \n        \n    \n\n\n    src/@terminus/ngx-tools/testing/src/utilities/event-objects.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                createFakeEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    createFakeEvent(type: string, canBubble: , cancelable: )\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Creates a fake event object with any desired event type.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    The event type\n    \n    \n                                                    \n                                                    \n                                                      canBubble\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    Define if the event can bubble up the DOM\n    \n    \n                                                    \n                                                    \n                                                      cancelable\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                createKeyboardEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    createKeyboardEvent(type: string, keyCode: number, target?: typeReference, key?: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Dispatches a keydown event from an element.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    The event type\n    \n    \n                                                    \n                                                    \n                                                      keyCode\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n    The event key code\n    \n    \n                                                    \n                                                    \n                                                      target\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                          true\n                                                      \n                                                      \n    The target element\n    \n    \n                                                    \n                                                    \n                                                      key\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                          true\n                                                      \n                                                      \n    The key\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                createMouseEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    createMouseEvent(type: string, x: , y: )\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      x\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      y\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                createTouchEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    createTouchEvent(type: string, pageX: , pageY: )\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Creates a browser TouchEvent with the specified pointer coordinates.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    The touch event type\n    \n    \n                                                    \n                                                    \n                                                      pageX\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The location on the X axis\n    \n    \n                                                    \n                                                    \n                                                      pageY\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The location on the Y axis\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/@terminus/ngx-tools/src/debounce/debounce.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                debounce\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    debounce(func: typeReference, wait: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Returns a function, that, as long as it continues to be invoked, will not be triggered. The\n    function will be called after it stops being called for N milliseconds.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      func\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n    The function to call after the debounce period\n    \n    \n                                                    \n                                                    \n                                                      wait\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n    The length of time to wait between calls (ms)\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/@terminus/ngx-tools/testing/src/utilities/dispatch-events.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                dispatchEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    dispatchEvent(node: undefined, event: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      event\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                dispatchFakeEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    dispatchFakeEvent(node: undefined, type: string, canBubble?: boolean)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Shorthand to dispatch a fake event on a specified node.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The Node that should dispatch the fake event\n    \n    \n                                                    \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    The event type\n    \n    \n                                                    \n                                                    \n                                                      canBubble\n                                                      \n                                                              boolean\n                                                      \n                                                      \n                                                          true\n                                                      \n                                                      \n    Define if the event can bubble up the DOM\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                dispatchKeyboardEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    dispatchKeyboardEvent(node: typeReference, type: string, keyCode: number, target?: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Shorthand to dispatch a keyboard event with a specified key code.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n    The Node that should dispatch the keyboard event\n    \n    \n                                                    \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    The event type\n    \n    \n                                                    \n                                                    \n                                                      keyCode\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n    The event key code\n    \n    \n                                                    \n                                                    \n                                                      target\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                          true\n                                                      \n                                                      \n    The target event element\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                dispatchMouseEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    dispatchMouseEvent(node: typeReference, type: string, x: , y: , event: )\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Shorthand to dispatch a mouse event on the specified coordinates.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n    The Node that should dispatch the mouse event\n    \n    \n                                                    \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    The event type\n    \n    \n                                                    \n                                                    \n                                                      x\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The location on the X axis\n    \n    \n                                                    \n                                                    \n                                                      y\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The location on the Y axis\n    \n    \n                                                    \n                                                    \n                                                      event\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The event\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                dispatchTouchEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    dispatchTouchEvent(node: typeReference, type: string, x: , y: )\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Shorthand to dispatch a touch event on the specified coordinates.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      node\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n    The Node that should dispatch the touch event\n    \n    \n                                                    \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    The event type\n    \n    \n                                                    \n                                                    \n                                                      x\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The location on the X axis\n    \n    \n                                                    \n                                                    \n                                                      y\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The location on the Y axis\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/@terminus/ngx-tools/testing/src/utilities/expect-native-el.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                expectNativeEl\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    expectNativeEl(fixture: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Reusable expect to check for the nativeElement\n    Note: this helper only accesses the 1st-level child within a component\n           A different helper method is need to access deep-level DOM nodes\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      fixture\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n    The test fixture\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/@terminus/ngx-tools/src/group-by/group-by.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                groupBy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    groupBy(array: undefined, key: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Return an object containing arrays split by property\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      array\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n    The array to split\n    \n    \n                                                    \n                                                    \n                                                      key\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                const arr = [{a: &#39;foo&#39;, b: 1}, {a: &#39;bar&#39;, b: 6}, {a: &#39;foo&#39;, b: 6}];\n    const result = groupBy(arr, &#39;a&#39;);\n    // Return is {foo: [{a: &#39;foo&#39;, b: 1}, {a: &#39;foo&#39;, b: 6}], bar: [{a: &#39;bar&#39;, b: 6}]}\n                                            \n                                \n                        \n                    \n                \n            \n    \n    src/@terminus/ngx-tools/src/noop/noop.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                noop\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    noop()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/@terminus/ngx-tools/testing/src/utilities/query-for.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                queryFor\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    queryFor(fixture: typeReference, selector: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Reusable Query helper function\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      fixture\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n    The test fixture\n    \n    \n                                                    \n                                                    \n                                                      selector\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/@terminus/ngx-tools/testing/src/utilities/type-in-element.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                typeInElement\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    typeInElement(value: string, element: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Focuses an input, sets its value and dispatches the input event, simulating the user typing.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      value\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n    Value to be set on the input.\n    \n    \n                                                    \n                                                    \n                                                      element\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n    Element onto which to set the value.\n    \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/@terminus/ngx-tools/testing/src/utilities/wrapped-error-message.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                wrappedErrorMessage\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    wrappedErrorMessage(e: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      e\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            A\n                        \n                        \n                            BACKSPACE\n                        \n                        \n                            COMMA\n                        \n                        \n                            creditCardRegex\n                        \n                        \n                            DELETE\n                        \n                        \n                            DOWN_ARROW\n                        \n                        \n                            emailRegex\n                        \n                        \n                            END\n                        \n                        \n                            ENTER\n                        \n                        \n                            ESCAPE\n                        \n                        \n                            HOME\n                        \n                        \n                            LEFT_ARROW\n                        \n                        \n                            NINE\n                        \n                        \n                            PAGE_DOWN\n                        \n                        \n                            PAGE_UP\n                        \n                        \n                            passwordRegex\n                        \n                        \n                            rendererMock\n                        \n                        \n                            RIGHT_ARROW\n                        \n                        \n                            SPACE\n                        \n                        \n                            TAB\n                        \n                        \n                            UP_ARROW\n                        \n                        \n                            Z\n                        \n                        \n                            ZERO\n                        \n                    \n                \n            \n        \n    \n\n\n    src/@terminus/ngx-tools/keycodes/src/keycodes.const.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                A\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            A:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 65\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                BACKSPACE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            BACKSPACE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 8\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                COMMA\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            COMMA:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 188\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                DELETE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            DELETE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 46\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                DOWN_ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            DOWN_ARROW:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 40\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                END\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            END:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 35\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ENTER\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ENTER:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 13\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ESCAPE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ESCAPE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 27\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                HOME\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            HOME:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 36\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                LEFT_ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            LEFT_ARROW:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 37\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                NINE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NINE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 57\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                PAGE_DOWN\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            PAGE_DOWN:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 34\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                PAGE_UP\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            PAGE_UP:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 33\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                RIGHT_ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RIGHT_ARROW:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 39\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                SPACE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            SPACE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 32\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TAB\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TAB:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 9\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                UP_ARROW\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            UP_ARROW:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 38\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                Z\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            Z:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 90\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ZERO\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            ZERO:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 48\n                            \n                        \n    \n    \n                \n            \n    \n    src/@terminus/ngx-tools/regex/src/credit-card/credit-card.regex.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                creditCardRegex\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            creditCardRegex:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/\n                            \n                        \n    \n                    \n                        \n                            Define a regex to validate a credit card number\n    Visa, MasterCard, American Express, Diners Club, Discover, JCB\n    \n                        \n                    \n    \n                \n            \n    \n    src/@terminus/ngx-tools/regex/src/email/email.regex.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                emailRegex\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            emailRegex:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                            \n                        \n    \n                    \n                        \n                            Define a regex to validate an email address\n    \n                        \n                    \n    \n                \n            \n    \n    src/@terminus/ngx-tools/regex/src/password/password.regex.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                passwordRegex\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            passwordRegex:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/\n                            \n                        \n    \n                    \n                        \n                            Define a regex to validate an email address\n    {6,100}     - Assert password is between 6 and 100 characters\n    (?=.*[0-9]) - Assert a string has at least one number\n    \n                        \n                    \n    \n                \n            \n    \n    src/@terminus/ngx-tools/testing/src/mocks/renderer.mock.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                rendererMock\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            rendererMock:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n      setElementStyle: () => {},\n      setElementClass: () => {},\n      selectRootElement: () => {},\n      createElement: () => {},\n      createViewRoot: () => {},\n      createText: () => {},\n      setElementProperty: () => {},\n      setElementAttribute: () => {},\n      setText: () => {},\n      setBindingDebugInfo: () => {},\n      createTemplateAnchor: () => {},\n      projectNodes: () => {},\n      attachViewAfter: () => {},\n      detachView: () => {},\n      destroyView: () => {},\n      listen: () => {},\n      listenGlobal: () => {},\n      invokeElementMethod: () => {},\n      animate: () => {},\n    }\n                            \n                        \n    \n                    \n                        \n                            A mock of the Angular Renderer\n    \n                        \n                    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
